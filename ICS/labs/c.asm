.ORIG x3000
JSR GETMAX
LD R0,MAP ; r0 = &map
AND R5,R5,#0
LD  R6,STACK 
LDR R1,R0,#0; R1 = N
BRZ WHILE1DONE
LDR R2,R0,#1; R2 = M
BRZ WHILE1DONE
NOT R1,R1
ADD R1,R1,#1 ; GET -N-1
ST  R1,NEGN
NOT R2,R2
ADD R2,R2,#1 ; GET -M-1
ST  R2,NEGM

AND R1,R1,#0 ; 
WHILE1
    LD  R3,NEGN
    ADD R3,R3,R1 ;; 0-N
    BRZ WHILE1DONE ;;  I<N
    AND R2,R2,#0
    WHILE2
        LD  R3,NEGM  
        ADD R3,R3,R2 ;; FOR J =0 ; J-M<0 ; J++
        BRZ WHILE2DONE
        JSR DFS ;; CALL DFS->R0
        ST  R1,SAVER1
        ADD R1,R5,#0 ; 
        JSR GETMAX
        LD  R1,SAVER1
        ADD R5,R0,#0;r5 = max(r5,dfs)
        ADD R2,R2,#1 
        BR WHILE2
    WHILE2DONE
    ADD R1,R1,#1;
BR WHILE1
WHILE1DONE
ADD R2,R5,#0
HALT

NEGN    .BLKW   1
NEGM    .BLKW   1
MAP .FILL X4000
MEMO .FILL x5000
STACK .FILL X8000
SAVER1  .BLKW   1
SAVER2  .BLKW   1
SAVER3  .BLKW   1
SAVER4  .BLKW   1
SAVER5  .BLKW   1
;;function R0 = max(R0,R1)
GETMAX 
ST R1,M1
ST R2,M2
ADD R2,R1,#0
NOT R2,R2
ADD R2,R2,#1
ADD R2,R2,R0
BRP CHOOSER0
ADD R0,R1,#0
CHOOSER0
LD R1,M1
LD R2,M2
RET
M1 .BLKW 1
M2 .BLKW 1

;;function R0 = dfs(i,j)
DFS ; r0 = dfs(r1,r2)
; ADD R0,R2,R1 for test
; RET
ADD R6,R6,#-1
STR R7,R6,#0
ADD R6,R6,#-1
STR R1,R6,#0
ADD R6,R6,#-1
STR R2,R6,#0
ST  R3,M3
ST  R4,M4
ST  R5,M5

JSR GETMEMOIJ ; R0 = MEMO[R1][R2]
ADD R4,R0,#0 ; P 
LDR R0,R0,#0 ; *P

BRNP RETURN ; RETURN *P
ADD R0,R0,#1 ; R0++
STR R0,R4,#0 ; *P++

AND R3,R3,#0
ADD R3,R3,#3
FOR
    BRN ENDFOR
    ST R1,M111
    ST R2,M222
    LEA  R5,DIR
    ADD R5,R5,R3
    ADD R5,R5,R3 ; R5 = DIR[I][0]
    LDR R5,R5,#0
    ADD R5,R1,R5 ; R5 = ROW +DIR[I][0]
    ST  R5,NEWROW
    BRN CONTINUE ;NEWROW >=0
    LD  R0,NEGN
    ADD R0,R5,R0 ; NEWROW - N < 0
    BRZP CONTINUE
    
    LEA  R5,DIR
    ADD R5,R5,R3
    ADD R5,R5,R3 ; 
    ADD R5,R5,#1 ; R5 = &DIR[I][1]
    LDR R5,R5,#0
    ADD R5,R2,R5 ; R5 = COL +DIR[I][0]
    ST  R5,NEWCOL
    BRN CONTINUE ;NEWCOL >=0
    LD  R0,NEGM
    ADD R0,R5,R0 ; NEWCOL - M < 0
    BRZP CONTINUE
    
    JSR GETMAPIJ ; R0 = &matrix[row][column]
    ADD R5,R0,#0 ; R5 = &matrix[row][column]
    LD R1,NEWROW
    LD R2,NEWCOL
    JSR GETMAPIJ ; R0 = &matrix[NEWROW][NEWCOL]
    LDR R0,R0,#0
    LDR R5,R5,#0    
    NOT R5,R5
    ADD R5,R5,#1
    ADD R5,R0,R5 ; matrix[newRow][newColumn] - matrix[row][column] >0
    BRNZ CONTINUE
    JSR DFS ; R0 = DFS(NEWROW,NEWCOL)
    ADD R1,R0,#1 ; R1 = DFS +1 
    LDR R0,R4,#0 ; R0 = *P
    JSR GETMAX ;R0 = MAX(*P,DFS+1)
    STR R0,R4,#0
    CONTINUE
    LD  R1,M111
    LD  R2,M222
    ADD R3,R3,#-1 ; I--
    BR FOR
ENDFOR

RETURN
LDR R0,R4,#0
LD  R3,M3
LD  R4,M4 
LD  R5,M5

LDR R2,R6,#0
ADD R6,R6,#1
LDR R1,R6,#0
ADD R6,R6,#1
LDR R7,R6,#0
ADD R6,R6,#1
RET
MAPA    .fill x4002
DIR .FILL   -1
    .FILL   0
    .FILL   1
    .FILL   0
    .FILL   0
    .FILL   -1
    .FILL   0
    .FILL   1 
M111 .BLKW 1
M222 .BLKW 1
M3  .BLKW 1
M4  .BLKW 1
M5  .BLKW 1
NEWROW .BLKW 1
NEWCOL .BLKW 1

;function r0 = matrix[r1][r2]
GETMAPij ;r0=Matrix[i][j] r1 = i ,r2 = j ,A + I*M + J GET
ST  R2,M22
LD  R0,MAPA
ADD R0,R0,R2 ; R0 = A+J
LDI R2,COL1 ; R2 = M
LOOPMAPIJ
BRZ DONEMAPIJ
ADD R0,R1,R0 ; R0+=I FOR m TIMES
ADD R2,R2,#-1
BR  LOOPMAPIJ
DONEMAPIJ
LD  R2,M22
RET
COL1 .FILL X4001
M22 .BLKW 1

;funcion R0 = memo[r1][r2]
MEMOA   .FILL x5000
GETMEMOij ;r0=Memo[i][j] r1 = i ,r2 = j ,A + I*M + J
ST  R2,M21
LD  R0,MEMOA
ADD R0,R0,R2 ; R0 = A+J
LDI R2,COL1 ; R2 = M
LOOPMEMOIJ
BRZ DONEMEMOIJ
ADD R0,R1,R0 ; R0+=I FOR m TIMES
ADD R2,R2,#-1
BR  LOOPMEMOIJ
DONEMEMOIJ
LD R2,M21
RET
M21 .BLKW 1

.END

.ORIG x4000
.FILL #2 ; N
.FILL #2 ; M
.FILL #1 ; the map
.FILL #2
.FILL #3
.FILL #4
.END

.orig x5000
.BLKW 2500
.end
